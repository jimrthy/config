# Master prefix key
unbind C-b
set -g prefix `
bind-key ` send-prefix

# Swap with C-O for cut/paste
#bind-key -d -k F1  escape ^0^0  # bound to F11
bind-key F11 set-option -g prefix C-o
#bind-key -d -k F2  escape \140\140 # bound to F12
bind-key F12 set-option -g prefix `

# Start window numbering at 1, to make switching more obvious
set -g base-index 1

# Colors
setw -g mode-bg yellow
set-option -g default-terminal "screen-256color" #"xterm-256color"  # "screen-256color"
set-option -g pane-active-border-fg black

set-window-option -g utf8 on

# this is the default. For copy/some other mode.
set-window-option -g mode-keys emacs
set-window-option -g monitor-activity on
#set-window-option -g windows-status-current-fg white
setw -g window-status-current-attr reverse

# Turn automatic renaming off completely.
setw -g automatic-rename off
set-option -g allow-rename off

setw -g mode-mouse on
#setw -g mouse-resize-pane on
#setw -g mouse-select-window on
set -g mouse-select-pane on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# vi movement keys
#set-option -g status-keys vi

setw -g xterm-keys on

################################################
# Status Bar
################################################
set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=magenta]>> #[fg=cyan,bold]#S -- #T#[default]'
set-option -g status-right '#[fg=red,bold][[ #(git branch( branch ]] #[fg=cyan]>>>> #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'

#############################################
# Unbindings
#############################################
#unbind [ #copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # vertical split

# Screws with paredit mode in emacs
# These aren't happening. What gives?
unbind-key -n C-Left
unbind-key -n C-Right
# Screws up nrepl/cider history
unbind-key -n C-Up
# This doesn't actually cause problems, but it's
# really annoying by itself
unbind-key -n C-Down

#############################################
# Bindings
#############################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf

#bind Escape copy-mode

# new split in current pane (horizontal / vertical)
bind-key - split-window -v # split pane horizontally
bind-key | split-window -h # split pane vertically

# list panes
bind-key Space list-panes

# break-pane
bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#               (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key j command-prompt "joinp -t:0"
bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

# previous pane
# I strongly suspect I may need to manually unbind these
#bind-key -n C-up prev
#bind-key -n C-left prev

# next pane
#bind-key -n C-right next
#bind-key -n C-down next

############################################
# Windows
############################################
set-window-option -g window-status-current-bg red
bind C-h previous-window
bind C-s next-window
bind-key C-e last-window
bind A command-prompt "rename-window %%"
#By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaler client
# is actively looking at it.
setw -g aggressive-resize on

############################################
# Panes
############################################
# Navigation
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key t select-pane -D
bind-key n select-pane -U
bind-key s select-pane -R

# Resizing
bind-key C-h resize-pane -L
bind-key C-t resize-pane -D
bind-key C-n resize-pane -U
bind-key C-s resize-pane -R

# use vim motion keys while in copy mode
setw -g mode-keys vi

############################################
# layouts
############################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window

# focus on first window
#select-window -t 0

############################################
# clipboard
############################################
##CLIPBOARD selection integration
## Requires prefix key before the command key
# Copy tmux past buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xsel -i -b"
# Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"

# Enable middle-click mouse extension
set-option -ga terminal-override ',rxvt-uni*:XT:ms=\E]52;%p1%s;%p2%s\007'
setw -g mode-mouse on
#setw -g mouse-resize-pane on
#setw -g mouse-select-window on
set -g mouse-select-pane on

